  0%|                                                                                                                              | 0/465 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/ubuntu/R1_Project/grpo_demo.py", line 144, in <module>
    trainer.train()
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/transformers/trainer.py", line 3579, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/trl/trainer/grpo_trainer.py", line 343, in compute_loss
    per_token_logps = get_per_token_logps(model, prompt_completion_ids)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/trl/trainer/grpo_trainer.py", line 332, in get_per_token_logps
    logits = model(input_ids).logits  # (B, L, V)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1638, in forward
    return self._post_forward(output)
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1613, in _post_forward
    passthrough_tensor_list = _DDPSink.apply(
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/autograd/function.py", line 574, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 250, in forward
    ret = tuple(
  File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 251, in <genexpr>
    inp.clone() if isinstance(inp, torch.Tensor) else inp for inp in inputs
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.73 GiB. GPU 0 has a total capacity of 39.39 GiB of which 2.49 GiB is free. Including non-PyTorch memory, this process has 36.89 GiB memory in use. Of the allocated memory 34.82 GiB is allocated by PyTorch, and 608.31 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/ubuntu/R1_Project/grpo_demo.py", line 144, in <module>
[rank0]:     trainer.train()
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/transformers/trainer.py", line 2123, in train
[rank0]:     return inner_training_loop(
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
[rank0]:     tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/transformers/trainer.py", line 3579, in training_step
[rank0]:     loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/trl/trainer/grpo_trainer.py", line 343, in compute_loss
[rank0]:     per_token_logps = get_per_token_logps(model, prompt_completion_ids)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/trl/trainer/grpo_trainer.py", line 332, in get_per_token_logps
[rank0]:     logits = model(input_ids).logits  # (B, L, V)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1638, in forward
[rank0]:     return self._post_forward(output)
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1613, in _post_forward
[rank0]:     passthrough_tensor_list = _DDPSink.apply(
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/autograd/function.py", line 574, in apply
[rank0]:     return super().apply(*args, **kwargs)  # type: ignore[misc]
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 250, in forward
[rank0]:     ret = tuple(
[rank0]:   File "/opt/conda/envs/handbook/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 251, in <genexpr>
[rank0]:     inp.clone() if isinstance(inp, torch.Tensor) else inp for inp in inputs
[rank0]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.73 GiB. GPU 0 has a total capacity of 39.39 GiB of which 2.49 GiB is free. Including non-PyTorch memory, this process has 36.89 GiB memory in use. Of the allocated memory 34.82 GiB is allocated by PyTorch, and 608.31 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
